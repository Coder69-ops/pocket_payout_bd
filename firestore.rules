rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isUserAuthenticated(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/admin_users/$(request.auth.uid));
    }
    
    // Base rule - deny by default
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Users collection
    match /users/{userId} {
      // Allow users to read their own profile or admins to read any profile
      allow get: if isUserAuthenticated(userId) || isAdmin();
      
      // Allow specific limited queries for referral code validation
      allow list: if (
        // For referral code validation queries - allow for ANY authenticated user
        (request.auth != null && 
         request.query.filters.size() == 1 &&
         request.query.filters[0].fieldPath == "referralCode") ||
        // For leaderboard queries (top users by points)
        (isAuthenticated() &&
         request.query.orderBy == 'pointsBalance' &&
         request.query.limit <= 50) ||
        // For admin access
        isAdmin()
      );
      
      // Allow creation of new users (still requires Firebase Auth)
      allow create: if isUserAuthenticated(userId);
      
      // Allow users to update their own profiles
      allow update: if isUserAuthenticated(userId);

      // Special rule for point balance updates
      allow update: if isUserAuthenticated(userId) && 
                     request.resource.data.diff(resource.data).affectedKeys().hasOnly(['pointsBalance', 'totalWithdrawn', 'lastUpdatedAt']);
      
      // Only admins can delete profiles
      allow delete: if isAdmin();
    }
    
    // Pending referrals collection - more permissive
    match /pending_referrals/{pendingId} {
      // Allow creating and reading pending referrals for authenticated users
      allow create, read: if isAuthenticated();
      
      // Only admins can update or delete
      allow update, delete: if isAdmin();
    }
    
    // Transactions collection
    match /transactions/{transactionId} {
      // Allow users to read their own transactions
      allow read: if isUserAuthenticated(resource.data.userId) || isAdmin();
      
      // Allow transaction creation
      allow create: if isUserAuthenticated(resource.data.userId) || isAdmin();
      
      // Only admins can update or delete transactions
      allow update, delete: if isAdmin();
    }
    
    // Withdrawal requests collection
    match /withdrawal_requests/{requestId} {
      // Allow users to read their own withdrawal requests and admins to read any
      allow get: if isUserAuthenticated(resource.data.userId) || isAdmin();
      allow list: if request.auth != null && 
                   (request.query.where.userId == request.auth.uid || isAdmin());
      
      // Allow users to create withdrawal requests for themselves
      allow create: if isUserAuthenticated(resource.data.userId);
      
      // Allow users to update only their own pending withdrawal requests
      allow update: if isUserAuthenticated(resource.data.userId) && 
                     resource.data.status == 'pending';
                     
      // Only admins can delete withdrawal requests
      allow delete: if isAdmin();
    }
    
    // Questions collection for quiz games
    match /questions/{questionId} {
      // All authenticated users can read questions
      allow read: if isAuthenticated();
      
      // Only admins can modify questions
      allow write: if isAdmin();
    }
    
    // Admin users collection
    match /admin_users/{userId} {
      // Only admins can access the admin collection
      allow read, write: if isAdmin();
    }
    
    // Settings collection (app configuration)
    match /settings/{settingId} {
      // All authenticated users can read settings
      allow read: if isAuthenticated();
      
      // Only admins can write to settings
      allow write: if isAdmin();
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      // Users can read their own notifications
      allow read: if isAuthenticated();
      
      // Admins can create global notifications
      allow create: if isAdmin() || isAuthenticated();
                      
      // Allow targeted user notifications
      allow create: if isAdmin() || isAuthenticated();
      
      // Users can mark their notifications as read
      allow update: if isAuthenticated();
      
      // Only admins can delete notifications
      allow delete: if isAdmin();
    }
  }
}